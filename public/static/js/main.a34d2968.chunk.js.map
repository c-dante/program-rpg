{"version":3,"sources":["game/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Game","props","containerRef","scene","camera","renderer","cube","_paused","_frameId","createRef","Scene","PerspectiveCamera","width","WebGLRenderer","setSize","Mesh","BoxGeometry","MeshBasicMaterial","color","add","position","z","this","current","appendChild","domElement","play","pause","window","requestAnimationFrame","tick","cancelAnimationFrame","rotation","x","y","render","ref","React","Component","Header","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+PA+EeA,E,kDA9Dd,WAAYC,GAAe,IAAD,uBACzB,cAAMA,IAVPC,kBAS0B,IAR1BC,WAQ0B,IAP1BC,YAO0B,IAN1BC,cAM0B,IAL1BC,UAK0B,IAH1BC,SAAmB,EAGO,EAF1BC,SAAmB,EAEO,OAKzB,EAAKN,aAAeO,sBACpB,EAAKN,MAAQ,IAAIO,IACjB,EAAKN,OAAS,IAAIO,IAAkB,GAAIC,EAAgB,GAAK,KAC7D,EAAKP,SAAW,IAAIQ,IACpB,EAAKR,SAASS,QAPA,IACC,KASf,EAAKR,KAAO,IAAIS,IACf,IAAIC,IACJ,IAAIC,IAAkB,CAAEC,MAAO,WAEhC,EAAKf,MAAMgB,IAAI,EAAKb,MACpB,EAAKF,OAAOgB,SAASC,EAAI,EAjBA,E,qDAoB1B,WAAqB,IAAD,EACnB,UAAAC,KAAKpB,aAAaqB,eAAlB,SAA2BC,YAAYF,KAAKjB,SAASoB,YACrDH,KAAKI,S,kCAGN,WACCJ,KAAKK,U,kBAGN,WAAQ,IAAD,OACFL,KAAKf,UACRe,KAAKf,SAAU,EACfe,KAAKd,SAAWoB,OAAOC,uBAAsB,kBAAM,EAAKC,a,mBAI1D,WACMR,KAAKf,UACTqB,OAAOG,qBAAqBT,KAAKd,UACjCc,KAAKd,UAAY,EACjBc,KAAKf,SAAU,K,kBAIjB,WAAQ,IAAD,OACDe,KAAKf,UACTe,KAAKd,SAAWoB,OAAOC,uBAAsB,kBAAM,EAAKC,UAExDR,KAAKhB,KAAK0B,SAASC,GAAK,IACxBX,KAAKhB,KAAK0B,SAASE,GAAK,IAExBZ,KAAKjB,SAAS8B,OAAOb,KAAKnB,MAAOmB,KAAKlB,W,oBAIxC,WACC,OACC,qBAAKgC,IAAKd,KAAKpB,mB,GAnECmC,IAAMC,WCHnBC,EAAS,kBACd,gCACC,6CACA,0KAiBaC,MATf,WACC,OACC,sBAAKC,UAAU,OAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,QCLYC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a34d2968.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nimport type { RefObject } from 'react';\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from 'three';\nimport type { Camera, Renderer } from 'three';\n\nexport interface Props {}\n\nclass Game extends React.Component<Props> {\n\tcontainerRef: RefObject<HTMLDivElement>;\n\tscene: Scene;\n\tcamera: Camera;\n\trenderer: Renderer;\n\tcube: Mesh;\n\n\t_paused: boolean = true;\n\t_frameId: number = 0;\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tconst width = 480;\n\t\tconst height = 480;\n\n\t\tthis.containerRef = createRef<HTMLDivElement>();\n\t\tthis.scene = new Scene();\n\t\tthis.camera = new PerspectiveCamera(75, width / height, 0.1, 1000);\n\t\tthis.renderer = new WebGLRenderer();\n\t\tthis.renderer.setSize(width, height);\n\n\t\t// ---- Bleh ----- //\n\t\tthis.cube = new Mesh(\n\t\t\tnew BoxGeometry(),\n\t\t\tnew MeshBasicMaterial({ color: 0x690069 })\n\t\t);\n\t\tthis.scene.add(this.cube);\n\t\tthis.camera.position.z = 2;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.containerRef.current?.appendChild(this.renderer.domElement);\n\t\tthis.play();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.pause();\n\t}\n\n\tplay() {\n\t\tif (this._paused) {\n\t\t\tthis._paused = false;\n\t\t\tthis._frameId = window.requestAnimationFrame(() => this.tick());\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (!this._paused) {\n\t\t\twindow.cancelAnimationFrame(this._frameId);\n\t\t\tthis._frameId = -1;\n\t\t\tthis._paused = true;\n\t\t}\n\t}\n\n\ttick() {\n\t\tif (!this._paused) {\n\t\t\tthis._frameId = window.requestAnimationFrame(() => this.tick());\n\n\t\t\tthis.cube.rotation.x += 0.01;\n\t\t\tthis.cube.rotation.y += 0.01;\n\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.containerRef} />\n\t\t);\n\t}\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Game from './game/Game';\n\nconst Header = () => (\n\t<div>\n\t\t<h4>Program RPG</h4>\n\t\t<p>\n\t\t\tA little playground of an idea.\n\t\t\tSpells and weapons are backed by scripts.\n\t\t\tYou can modify these scripts at the cost of MP per compute.\n\t\t</p>\n\t</div>\n);\n\nfunction App() {\n\treturn (\n\t\t<div className=\"root\">\n\t\t\t<Header />\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}