{"version":3,"sources":["game/inputs/xbox.ts","game/inputs/globalContext.tsx","DebugInput.tsx","game/config.tsx","game/gameContext.tsx","game/api.tsx","game/magic.tsx","game/CodeWindow.tsx","game/ai.tsx","game/Game.tsx","game/shaders/test-vert.ts","game/shaders/test-frag.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["XboxButtons","XboxButtonMap","Object","keys","filter","fp","flow","Number","isNaN","reduce","acc","name","idx","axisPastDeadzone","x","y","deadzone","localKeyBuffer","keyBuffer","globalInputs","pointers","gamepads","_frameId","rafLoop","time","navigator","getGamepads","identity","length","at","pop","window","requestAnimationFrame","unhook","undefined","UnhookInputs","HookInputs","console","log","_onKeyUp","evt","code","down","timeStamp","push","bufferKeyUp","_onKeyDown","key","_onPointerDown","pointerId","id","clientX","clientY","_onPointerUp","_onPointerMove","addEventListener","removeEventListener","cancelAnimationFrame","warn","Axis","radius","innerRadius","version","width","height","cx","cy","r","fill","GamepadButtons","props","state","index","gamepad","mapping","prevProps","this","buttons","map","btn","pressed","touched","value","React","Component","DebugInput","useRaf","className","entries","v","String","chunk","axes","connected","timestamp","k","Colors","Controls","Up","Down","Left","Right","Spawn","Boost","CameraUp","CameraDown","CameraLeft","CameraRight","CameraBoost","Tag","SCALE","makeActor","mesh","Math","random","toString","slice","tick","noop","tags","Set","makeBox","color","Mesh","BoxGeometry","MeshBasicMaterial","makeEntity","actors","scene","actorProps","position","add","entity","disposeMesh","geometry","dispose","isArray","material","forEach","removeByTags","ctx","partition","a","every","tag","has","remove","keep","removeAll","actorSet","actor","getByTags","tagSet","b","sortBy","l","elt","setIntersects","SpellEnv","Vector3","Spherical","invokeNewSpell","spell","compileSpell","incantation","fn","Function","source","spellBook","SpellEditor","containerRef","codeMirror","createRef","current","_onChange","cm","onChange","doc","getValue","_onFocus","onFocus","_onBlur","onBlur","CodeMirror","lineNumbers","matchBrackets","mode","on","once","off","setValue","ref","DebugInputTable","input","colSpan","mouse","toPrecision","DebugTarget","target","CodeWindow","targets","onSpellChange","useState","setCode","error","setError","localSpell","setLocalSpell","useEffect","parseSpell","useCallback","newSpell","disabled","onClick","object","randomPointNear","origin","clone","setFromSphericalCoords","PI","setZ","addAllMut","self","from","chasePlayer","delta","rotation","bb","player","distanceTo","sub","normalize","multiplyScalar","makeOther","api","entityProps","pick","pass","wander","nextPoint","heading","copy","lookAt","speed","Game","tickables","_time","renderer","camera","makeContext","Scene","PerspectiveCamera","WebGLRenderer","setSize","z","raycaster","Raycaster","partial","withContext","paused","spellSaved","currentSpell","currentSpellTicker","appendChild","domElement","cube","moveX","moveY","ai","ground","PlaneGeometry","ShaderMaterial","uniforms","vertexShader","fragmentShader","targeting","opacity","transparent","setUpScene","lastSpawn","Date","now","otherSpawner","maxPop","spawnTime","den","spawnTags","uuid","lerp","setSpell","play","pause","performance","t","setState","atTime","timeStep","getBoundingClientRect","setFromCamera","intersectObjects","children","find","render","style","Boolean","currentTarget","blur","setX","setY","sample","_","i","spellLogic","cooldown","last","axisX","axisY","useAxis","entityLogic","velocity","point","life","collide","spellCaster","clearTimeout","saveTimeout","setTimeout","Header","href","App","showDebug","setShowDebug","useLifecycles","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd89279a.chunk.js","sourcesContent":["import fp from 'lodash/fp';\n\nexport enum XboxButtons {\n\t// 0-3\n\tA,\n\tB,\n\tX,\n\tY,\n\n\t// 4-5\n\tLeftShoulder,\n\tRightShoulder,\n\n\t// 6-7 (also range)\n\tLeftTrigger,\n\tRightTrigger,\n\n\t// 8-9\n\tBack,\n\tStart,\n\n\t// 10-11\n\tLeftSick,\n\tRightSick,\n\n\t// 12-15\n\tDpadLeft,\n\tDpadRight,\n\tDpadUp,\n\tDpadDown,\n\n\t// 16\n\tXboxButton,\n};\n\nexport const ButtonNames = Object.keys(XboxButtons).filter(fp.flow(\n\tNumber,\n\tfp.isNaN\n));\n\nexport const XboxButtonMap: Record<number, XboxButtons> = ButtonNames.reduce((acc, name, idx) => ({\n\t...acc,\n\t[idx]: name,\n}), {});\n","import fp from 'lodash/fp';\n\nexport type Key = { at: number, code: string, down: boolean };\nexport type Pointer = { at: number, id: number, down: boolean, x: number, y: number };\n\n// Buffered inputs for event based stuff\nexport type Inputs = {\n\tkeys: Record<string, Key>,\n\tpointers: Record<number, Pointer>,\n\tgamepads: Gamepad[],\n};\n\nexport const AXIS_DEADZONE = 0.15;\n\nexport const axisPastDeadzone = (x, y, deadzone = AXIS_DEADZONE) => (x*x + y*y) > deadzone;\n\nconst PRESS_WINDOW_MS = 175; // ms to see a \"down-up\" event as a button press\n\ntype GamepadId = string;\n\nlet localKeyBuffer: Key[] = [];\nexport const keyBuffer: Key[] = [];\nconst bufferKeyDown = (key: Key) => {\n\t// Drop keys outside of buffer window + duplicate buffered keys (we'll just re-queue)\n\tlocalKeyBuffer = localKeyBuffer.filter(x => key.code !== x.code && key.at - x.at < PRESS_WINDOW_MS);\n\t// Add my key\n\tlocalKeyBuffer.push(key);\n};\nconst bufferKeyUp = ({ at, code }: Key) => {\n\tlocalKeyBuffer = localKeyBuffer.filter(x => {\n\t\tif (x.code === code && at - x.at < PRESS_WINDOW_MS) {\n\t\t\tkeyBuffer.push(x);\n\t\t}\n\n\t\treturn x.code !== code && at - x.at < PRESS_WINDOW_MS;\n\t});\n};\n\nexport const globalInputs: Inputs = {\n\tkeys: {},\n\tpointers: {},\n\tgamepads: [],\n};\n\nexport const getGamepadId = ({ id, index }: Gamepad): GamepadId => `${id}|${index}`;\n\n// Chrome only snapshots and only emits these events -- using the getGamepads() globally for now instead of watching connect/disconnect\nlet _frameId = 0;\nconst rafLoop = (time) => {\n\tglobalInputs.gamepads = [...navigator.getGamepads()].filter(fp.identity) as Gamepad[];\n\twhile (keyBuffer.length && time - keyBuffer[0].at > 1000) {\n\t\tkeyBuffer.pop();\n\t}\n\t_frameId = window.requestAnimationFrame(rafLoop);\n};\n\nlet unhook: undefined | Function = undefined;\nexport const UnhookInputs = () => {\n\tunhook?.();\n\tunhook = undefined;\n};\nexport const HookInputs = () => {\n\tif (unhook) {\n\t\tconsole.warn('Attempt to re-hook inputs blocked.');\n\t\treturn;\n\t}\n\n\tconsole.log('Register input listeners');\n\t// Window events in the mount/unmount sections for live reload and whatnot\n\tconst _onKeyUp = (evt: KeyboardEvent) => {\n\t\tif (globalInputs.keys[evt.code]?.down !== false) {\n\t\t\tglobalInputs.keys[evt.code] = { code: evt.code, down: false, at: evt.timeStamp };\n\t\t\tbufferKeyUp(globalInputs.keys[evt.code]);\n\t\t}\n\t};\n\tconst _onKeyDown = (evt: KeyboardEvent) => {\n\t\tif (globalInputs.keys[evt.code]?.down !== true) {\n\t\t\tglobalInputs.keys[evt.code] = { code: evt.code, down: true, at: evt.timeStamp };\n\t\t\tbufferKeyDown(globalInputs.keys[evt.code]);\n\t\t}\n\t};\n\tconst _onPointerDown = (evt: PointerEvent) => {\n\t\tglobalInputs.pointers[evt.pointerId] = { id: evt.pointerId, down: true, x: evt.clientX, y: evt.clientY, at: evt.timeStamp };\n\t};\n\tconst _onPointerUp = (evt: PointerEvent) => {\n\t\tglobalInputs.pointers[evt.pointerId] = { id: evt.pointerId, down: false, x: evt.clientX, y: evt.clientY, at: evt.timeStamp };\n\t};\n\tconst _onPointerMove = (evt: PointerEvent) => {\n\t\tif (!globalInputs.pointers[evt.pointerId]) {\n\t\t\tglobalInputs.pointers[evt.pointerId] = { id: evt.pointerId, down: false, x: evt.clientX, y: evt.clientY, at: evt.timeStamp };\n\t\t}\n\t\tglobalInputs.pointers[evt.pointerId].x = evt.clientX;\n\t\tglobalInputs.pointers[evt.pointerId].y = evt.clientY;\n\t\tglobalInputs.pointers[evt.pointerId].at = evt.timeStamp;\n\t};\n\n\n\t_frameId = window.requestAnimationFrame(rafLoop);\n\twindow.addEventListener('keyup', _onKeyUp);\n\twindow.addEventListener('keydown', _onKeyDown);\n\twindow.addEventListener('pointerdown', _onPointerDown);\n\twindow.addEventListener('pointerup', _onPointerUp);\n\twindow.addEventListener('pointermove', _onPointerMove);\n\tunhook = () => {\n\t\tconsole.log('Unregister input listeners');\n\t\twindow.removeEventListener('keyup', _onKeyUp);\n\t\twindow.removeEventListener('keydown', _onKeyDown);\n\t\twindow.removeEventListener('pointerdown', _onPointerDown);\n\t\twindow.removeEventListener('pointerup', _onPointerUp);\n\t\twindow.removeEventListener('pointermove', _onPointerMove);\n\t\twindow.cancelAnimationFrame(_frameId);\n\t\t_frameId = -1;\n\t};\n\n\treturn UnhookInputs;\n};\n","import fp from 'lodash/fp';\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { useRaf } from 'react-use';\nimport { XboxButtonMap, XboxButtons } from './game/inputs/xbox';\nimport { globalInputs, keyBuffer } from './game/inputs/globalContext';\n\nconst Axis = ({ x, y, radius, innerRadius = radius / 6 }) => (\n\t<svg version=\"1.1\" width={radius * 2} height={radius * 2}>\n\t\t<circle cx={radius} cy={radius} r={radius} />\n\t\t<circle cx={radius + x*(radius - innerRadius)} cy={radius + y*(radius - innerRadius)} r={innerRadius} fill='red' />\n\t</svg>\n);\n\ninterface GamepadButtonsProps {\n\tgamepad: Gamepad;\n}\ninterface GamepadButtonsState {\n\tindex: number;\n\tmapping: Record<number, XboxButtons>;\n}\nclass GamepadButtons extends React.Component<GamepadButtonsProps, GamepadButtonsState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tindex: props.gamepad.index,\n\t\t\tmapping: { ...XboxButtonMap },\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.gamepad.index !== this.state.index) {\n\t\t\tconsole.warn('Oh no, swapped gamepads!');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.gamepad.buttons.map((btn, idx) => (\n\t\t\t\t\t<div key={idx}>\n\t\t\t\t\t\t({idx}) {this.state.mapping[idx]} {btn.pressed} - {btn.touched} - {btn.value}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst DebugInput = () => {\n\tuseRaf(1e11); // 1e12 fails on mine\n\n\treturn (\n\t\t<div className=\"text-small\">\n\t\t\t<h3>Debug Inputs</h3>\n\n\t\t\t<h4>Pointers</h4>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>id</td>\n\t\t\t\t\t\t<td>down</td>\n\t\t\t\t\t\t<td>x</td>\n\t\t\t\t\t\t<td>y</td>\n\t\t\t\t\t\t<td>at</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{Object.entries(globalInputs.pointers).map(([id,v]) => (\n\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t<td>{id}</td>\n\t\t\t\t\t\t\t<td>{String(v.down)}</td>\n\t\t\t\t\t\t\t<td>{v.x}</td>\n\t\t\t\t\t\t\t<td>{v.y}</td>\n\t\t\t\t\t\t\t<td>{v.at}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t\t<h4>Gamepads</h4>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>id</td>\n\t\t\t\t\t\t<td>axes</td>\n\t\t\t\t\t\t<td>buttons</td>\n\t\t\t\t\t\t<td>connected</td>\n\t\t\t\t\t\t<td>mapping</td>\n\t\t\t\t\t\t<td>At</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{globalInputs.gamepads.map((gamepad) => (\n\t\t\t\t\t\t<tr key={gamepad.id}>\n\t\t\t\t\t\t\t<td>{gamepad.id}</td>\n\t\t\t\t\t\t\t<td>{fp.chunk(2, gamepad.axes).map(([x, y], index) => (\n\t\t\t\t\t\t\t\t<Axis x={x} y={y} radius={25} key={index} />\n\t\t\t\t\t\t\t))}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<GamepadButtons gamepad={gamepad} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{String(gamepad.connected)}</td>\n\t\t\t\t\t\t\t<td>{gamepad.mapping}</td>\n\t\t\t\t\t\t\t<td>{gamepad.timestamp}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t\t<h4>Keyboard</h4>\n\t\t\t<div>\n\t\t\t\tBuffered Keys\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{keyBuffer.map((key) => (\n\t\t\t\t\t\t\t<Fragment key={key.at}>\n\t\t\t\t\t\t\t\t<td>{key.code}</td>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{keyBuffer.map((key) => (\n\t\t\t\t\t\t\t<Fragment key={key.at}>\n\t\t\t\t\t\t\t\t<td>{key.at}</td>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Key</td>\n\t\t\t\t\t\t<td>Down</td>\n\t\t\t\t\t\t<td>At</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{Object.entries(globalInputs.keys).map(([k,v]) => (\n\t\t\t\t\t\t<tr key={k}>\n\t\t\t\t\t\t\t<td>{k}</td>\n\t\t\t\t\t\t\t<td>{String(v.down)}</td>\n\t\t\t\t\t\t\t<td>{v.at}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t</div>\n\t);\n};\n\nexport default DebugInput;\n","export const Colors = {\n\tRed: 0xFF0000,\n\tPurple: 0x690069,\n};\n\nexport const Controls = {\n\t// Player Movement\n\tUp: 'KeyW',\n\tDown: 'KeyS',\n\tLeft: 'KeyA',\n\tRight: 'KeyD',\n\tSpawn: 'Space',\n\tBoost: 'ShiftLeft',\n\n\t// Camera\n\tCameraUp: 'ArrowUp',\n\tCameraDown: 'ArrowDown',\n\tCameraLeft: 'ArrowLeft',\n\tCameraRight: 'ArrowRight',\n\n\t// Boost\n\tCameraBoost: 'ShiftLeft',\n};\n\nexport const Tag = {\n\tOther: 'Other',\n\tBullet: 'Bullet',\n};\n\nexport const SCALE = 1 / 10;\nexport const PLANE_Z = 30;\n","import fp from 'lodash/fp';\nimport type { Renderer, Scene, Camera, Mesh, Intersection } from 'three';\nimport { Inputs, globalInputs } from './inputs/globalContext';\n\nexport type TimeStep = {\n\ttime: number, // in performance.now()\n\tdelta: number, // since last tick time\n}\n\nexport type Tick = (ctx: Context, step: TimeStep, self: Actor) => void;\nexport interface Tickable {\n\ttick: Tick;\n}\nexport interface Named {\n\tname: string;\n}\nexport interface Tagged {\n\ttags: Set<string>;\n}\n\nexport interface Actor extends Tickable, Named, Tagged {\n\tmesh: Mesh;\n\tstate?: any;\n\t// @todo: Disposable\n};\n\nexport type GameInput = {\n\tglobalInputs: Inputs,\n\tmouse: {\n\t\tx: number,\n\t\ty: number,\n\t}\n};\n\nexport type Blackboard = {\n\treadonly input: GameInput,\n\tplayer?: Actor,\n\t[x: string]: any,\n};\n\nexport type Context = {\n\t// filters and changes each tick\n\tactors: Actor[],\n\ttargets: Intersection[],\n\ttargeting?: Intersection,\n\t// Fixed things\n\treadonly camera: Camera,\n\treadonly scene: Scene,\n\treadonly renderer: Renderer,\n\treadonly bb: Blackboard,\n};\nexport const makeContext = ({\n\trenderer,\n\tcamera,\n\tscene,\n\tactors = [],\n\tbb = {\n\t\tinput: { globalInputs, mouse: { x: 0, y: 0 }}\n\t},\n\ttargets = [],\n}: Partial<Context> & Pick<Context, 'camera' | 'scene' | 'renderer'>): Context => ({\n\trenderer,\n\tactors,\n\tcamera,\n\tscene,\n\tbb,\n\ttargets,\n});\n\nexport type MakeActorProps = Actor;\nexport const makeActor = ({\n\tmesh,\n\tname = `actor-${Math.random().toString(16).slice(2)}`,\n\ttick = fp.noop,\n\ttags = new Set(),\n\tstate,\n}: Partial<MakeActorProps> & Pick<MakeActorProps, 'mesh'>): Actor => {\n\tmesh.name = name;\n\treturn {\n\t\ttick,\n\t\tmesh,\n\t\tname,\n\t\ttags,\n\t\tstate,\n\t};\n};\n","import fp from 'lodash/fp';\nimport { BoxGeometry, Mesh, MeshBasicMaterial, Raycaster } from 'three';\nimport { Actor, Context, makeActor, Tick, TimeStep } from './gameContext';\nimport { Colors } from './config';\n\n// I want \"into Set\" -- gimme something that can get to Set<T>, and Set\ntype IntoSet<T> = Set<T> | T[];\n\n// -------- Set/helpers\n// Would use const but <T>() => overlaps w/ tsx\nfunction setIntersects<T>(a: Set<T>, b: Set<T>): boolean {\n\tconst [l, r] = fp.sortBy('size', [a, b]);\n\tfor (const elt of l) {\n\t\tif (r.has(elt)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n// console.log(setIntersects(\n// \tnew Set([1, 2, 3]),\n// \tnew Set([2]),\n// ));\n// console.log(setIntersects(\n// \tnew Set([1, 2, 3]),\n// \tnew Set([5, 6, 7, 8, 9, 10, 11]),\n// ));\n// --------\n\nexport const makeBox = (color = Colors.Purple) => new Mesh(\n\tnew BoxGeometry(),\n\tnew MeshBasicMaterial({ color })\n);\n\n// Typing this is annoying\nexport type MakeEntityProps = {\n\tx: number,\n\ty: number,\n\ttick: Tick,\n\tcolor: number,\n\tstate?: any,\n} & Actor;\nexport const makeEntity = (\n\t{ actors, scene }: Context,\n\t{\n\t\tmesh = makeBox(), // n.b., not a memory leak on chrome I guess\n\t\tx = 0,\n\t\ty = 0,\n\t\ttick = fp.noop,\n\t\tstate,\n\t\t...actorProps\n\t}: Partial<MakeEntityProps> = {}\n): Actor => {\n\tmesh.position.x = x;\n\tmesh.position.y = y;\n\tscene.add(mesh);\n\n\tconst entity = makeActor({\n\t\tstate,\n\t\tmesh,\n\t\ttick,\n\t\t...actorProps\n\t});\n\tactors.push(entity);\n\n\treturn entity;\n};\n\nconst disposeMesh = (mesh: Mesh): void => {\n\tmesh.geometry.dispose();\n\tif (fp.isArray(mesh.material)) {\n\t\tmesh.material.forEach(x => x.dispose());\n\t} else {\n\t\tmesh.material.dispose();\n\t}\n};\n\nexport const removeByTags = (\n\tctx: Context,\n\ttags: string[],\n): void => {\n\tconst [remove, keep] = fp.partition(\n\t\t(a: Actor) => tags.every(tag => a.tags.has(tag)),\n\t\tctx.actors\n\t);\n\tctx.actors = keep;\n\tctx.scene.remove(...remove.map(x => x.mesh));\n\n\t// @todo: determine shader & geometry lifetimes\n\t// Maybe a \"Disposables\" idea?\n\tremove.forEach(({ mesh }) => disposeMesh(mesh));\n};\n\nexport const removeAll = (\n\tctx: Context,\n\tactors: Actor[],\n): void => {\n\tconst actorSet = new Set(actors);\n\tctx.actors = ctx.actors.filter(x => !actorSet.has(x));\n\n\t// @todo: determine shader & geometry lifetimes\n\t// Maybe a \"Disposables\" idea?\n\tctx.scene.remove(...actors.map(x => x.mesh));\n\tactors.forEach(x => disposeMesh(x.mesh));\n};\n\nexport const remove = (\n\tctx: Context,\n\tactor: Actor\n): void => removeAll(ctx, [actor]);\n\nconst getByTags = (ctx: Context, tags: IntoSet<string>): Actor[] => {\n\tconst tagSet: Set<string> = fp.isArray(tags)\n\t\t? new Set(tags)\n\t\t: tags as Set<string>;\n\treturn ctx.actors.filter(\n\t\tx => setIntersects(x.tags, tagSet),\n\t);\n};\n\n/**\n * Annoyingly mutable object\n * Would love to mark things as mut better\n */\nexport interface ContextApi {\n\treadonly ctx: Context;\n\treadonly raycaster: Raycaster;\n\n\tmakeEntity: (props: Partial<MakeEntityProps>) => Actor;\n\tremove: (actor: Actor) => void;\n\tremoveAll: (actor: Actor[]) => void;\n\tremoveByTags: (tags: string[]) => void;\n\tgetByTags: (tags: IntoSet<string>) => Actor[];\n};\n\nexport const withContext = (ctx: Context): ContextApi => ({\n\tctx,\n\traycaster: new Raycaster(),\n\tmakeEntity: fp.partial(makeEntity, [ctx]),\n\tremove: fp.partial(remove, [ctx]),\n\tremoveAll: fp.partial(removeAll, [ctx]),\n\tremoveByTags: fp.partial(removeByTags, [ctx]),\n\tgetByTags: fp.partial(getByTags, [ctx]),\n});\n\nexport type AppTick = (api: ContextApi, step: TimeStep) => void;\n","import { BoxGeometry, Mesh, MeshBasicMaterial, Vector3, Spherical } from 'three';\nimport { TimeStep } from './gameContext';\nimport { ContextApi } from './api';\nimport { SCALE, Colors, Tag } from './config';\nimport { axisPastDeadzone } from './inputs/globalContext';\n\nconst SpellEnv = {\n\tVector3,\n\tSpherical,\n};\n\nexport type SpellFn = (_: typeof SpellEnv) => (delta: number, position: Vector3, velocity: Vector3) => void;\n\nexport type Spell = {\n\tsource: string,\n\tfn: SpellFn\n};\n\nexport const invokeNewSpell = (spell: SpellFn) => spell(SpellEnv);\n\nexport const compileSpell = (incantation: string) => {\n\t// eslint-disable-next-line no-new-func\n\tconst fn = new Function(`\"use strict\";return ({ Vector3, Spherical }) => { ${incantation} }`)() as SpellFn;\n\n\t// Ensure we can evoke\n\tinvokeNewSpell(fn);\n\n\t// Return the object\n\treturn {\n\t\tsource: incantation,\n\t\tfn,\n\t};\n};\n\nexport const spellBook: Spell[] = [\n\tcompileSpell(\n`return (delta, position, velocity) => {\n  position.addScaledVector(velocity, delta);\n};`),\n\tcompileSpell(\n`let theta = 0;\nconst up = new Vector3(0.0, 0.0, 1.0);\nreturn (delta, position, velocity) => {\n  position.addScaledVector(velocity, delta);\n  velocity.applyAxisAngle(up, theta);\n  theta += 0.0001;\n};`),\ncompileSpell(\n`const up = new Vector3(0.0, 0.0, 1.0);\nconst theta = Math.random() * Math.PI * 2;\nconst fixedVelocity = new Vector3(1.0, 1.0, 0.0)\n\t.applyAxisAngle(up, theta)\n\t.normalize()\n\t.multiplyScalar(0.03);\n\nreturn (delta, position, velocity) => {\n\tposition.addScaledVector(fixedVelocity, delta);\n};`),\n];\n\nexport const spellCaster = (spellLogic: Spell = spellBook[0]) => {\n\tconst cooldown = 100;\n\tlet last = 0;\n\treturn (api: ContextApi, { time }: TimeStep) => {\n\t\tconst [axisX, axisY] = api.ctx.bb.input.globalInputs.gamepads?.[0]?.axes?.slice(2) ?? [0, 0];\n\t\tconst useAxis = axisPastDeadzone(axisX, axisY);\n\t\tif (\n\t\t\tapi.ctx.targeting\n\t\t\t&& api.ctx.bb.player\n\t\t\t&& (\n\t\t\t\tapi.ctx.bb.input.globalInputs.pointers?.[1]?.down\n\t\t\t\t|| useAxis\n\t\t\t)\n\t\t\t&& time - last >= cooldown\n\t\t) {\n\t\t\tlast = time;\n\n\t\t\tconst entityLogic = invokeNewSpell(spellLogic.fn);\n\t\t\tconst velocity = (() => {\n\t\t\t\tif (useAxis) {\n\t\t\t\t\treturn new Vector3(axisX, -axisY);\n\t\t\t\t}\n\n\t\t\t\tconst target = api.ctx.targeting.point.clone().setZ(0);\n\t\t\t\tconst origin = api.ctx.bb.player.mesh.position.clone().setZ(0);\n\t\t\t\treturn target.sub(origin);\n\t\t\t})();\n\n\t\t\t// Normalize the velocity\n\t\t\tvelocity\n\t\t\t\t.normalize()\n\t\t\t\t.multiplyScalar(0.05 * SCALE);\n\n\t\t\tapi.makeEntity({\n\t\t\t\tx: api.ctx.bb.player.mesh.position.x,\n\t\t\t\ty: api.ctx.bb.player.mesh.position.y,\n\t\t\t\t// ---- @todo: phys\n\t\t\t\tstate: {\n\t\t\t\t\tvelocity,\n\t\t\t\t\tlife: 500,\n\t\t\t\t},\n\t\t\t\t// ----\n\t\t\t\tmesh: new Mesh(\n\t\t\t\t\tnew BoxGeometry(0.1, 0.1, 0.1),\n\t\t\t\t\tnew MeshBasicMaterial({ color: Colors.Red })\n\t\t\t\t),\n\t\t\t\ttags: new Set([ Tag.Bullet]),\n\t\t\t\ttick(_, { delta }, actor) {\n\t\t\t\t\tconst { mesh, state } = actor;\n\t\t\t\t\tif (state.life <= 1) {\n\t\t\t\t\t\tapi.remove(actor);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Phys baby\n\t\t\t\t\tstate.life--;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tentityLogic(delta, mesh.position, state.velocity);\n\t\t\t\t\t\tconst collide = api.ctx.actors.find(\n\t\t\t\t\t\t\tx => x.tags.has(Tag.Other)\n\t\t\t\t\t\t\t\t&& x.mesh.position.distanceTo(mesh.position) <= 0.8\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (collide) {\n\t\t\t\t\t\t\tapi.removeAll([collide, actor]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.warn('Spell Exception', error);\n\t\t\t\t\t\tstate.life = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n};\n","import React, { createRef, RefObject, useCallback, useEffect, useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/matchbrackets';\nimport CodeMirror from 'codemirror';\nimport type { Intersection } from 'three';\n\nimport { Controls } from './config';\nimport { GameInput } from './gameContext';\nimport fp from 'lodash/fp';\nimport { compileSpell, Spell } from './magic';\n\nexport interface Props {\n\tsource?: string;\n\tonChange: (source: string) => void;\n\tonFocus: () => void;\n\tonBlur: () => void;\n}\n\nexport interface State {}\n\nclass SpellEditor extends React.Component<Props, State> {\n\tcontainerRef: RefObject<HTMLDivElement>;\n\tcodeMirror: any;\n\tdispose: () => void = fp.noop;\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.containerRef = createRef<HTMLDivElement>();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.containerRef.current) {\n\t\t\tconst _onChange = (cm: CodeMirror) => {\n\t\t\t\tthis.props.onChange(cm.doc.getValue());\n\t\t\t};\n\t\t\tconst _onFocus = () => this.props.onFocus();\n\t\t\tconst _onBlur = () => this.props.onBlur();\n\t\t\tthis.codeMirror = new CodeMirror(this.containerRef.current, {\n\t\t\t\tlineNumbers: true,\n\t\t\t\tmatchBrackets: true,\n\t\t\t\tmode: 'text/typescript',\n\t\t\t\tvalue: this.props.source ?? '',\n\t\t\t});\n\t\t\tthis.codeMirror.on('change', _onChange);\n\t\t\tthis.codeMirror.on('focus', _onFocus);\n\t\t\tthis.codeMirror.on('blur', _onBlur);\n\t\t\tthis.dispose = fp.once(() => {\n\t\t\t\tthis.codeMirror.off('change', _onChange);\n\t\t\t\tthis.codeMirror.off('focus', _onFocus);\n\t\t\t\tthis.codeMirror.off('blur', _onBlur);\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.dispose();\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tif (this.props.source !== prevProps.source) {\n\t\t\tthis.codeMirror.setValue(this.props.source);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.containerRef} />\n\t\t);\n\t}\n}\n\ninterface DebugInputTableProps {\n\tinput: GameInput;\n}\nconst DebugInputTable = ({ input }: DebugInputTableProps) => (\n\t<div className=\"text-small\">\n\t\t<table>\n\t\t\t<colgroup>\n\t\t\t\t<col width=\"40%\" />\n\t\t\t\t<col width=\"30%\" />\n\t\t\t\t<col width=\"35%\" />\n\t\t\t</colgroup>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>Mouse</td>\n\t\t\t\t\t<td colSpan={2}>{input.globalInputs.pointers?.[0]?.down ? 'down' : 'up'}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td></td>\n\t\t\t\t\t<td>{input.mouse.x.toPrecision(4)}</td>\n\t\t\t\t\t<td>{input.mouse.y.toPrecision(4)}</td>\n\t\t\t\t</tr>\n\t\t\t\t{Object.keys(Controls).map((key) => (\n\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t<td>{key}</td>\n\t\t\t\t\t\t<td>{Controls[key]}</td>\n\t\t\t\t\t\t<td>{input.globalInputs.keys[Controls[key]] ? 'down' : 'up'}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n);\n\nconst DebugTarget = ({ target }) => (\n\t<div className=\"text-small\">\n\t\tTarget: {target.name}\n\t</div>\n);\n\nexport interface CodeWindowProps {\n\tinput: GameInput;\n\ttargets?: Intersection[];\n\tspell?: Spell;\n\tonSpellChange?: (spell: Spell) => void;\n\tonFocus?: () => void,\n\tonBlur?: () => void,\n}\nconst CodeWindow: React.FC<CodeWindowProps> = ({\n\tinput,\n\ttargets = [],\n\tspell,\n\tonSpellChange = fp.noop,\n\tonFocus = fp.noop,\n\tonBlur = fp.noop,\n}) => {\n\tconst [code, setCode] = useState(spell?.source ?? '');\n\tconst [error, setError] = useState();\n\tconst [localSpell, setLocalSpell] = useState(spell);\n\tuseEffect(() => {\n\t\tif (spell?.source && spell.source !== code) {\n\t\t\tsetCode(spell.source);\n\t\t\tsetLocalSpell(spell);\n\t\t}\n\t}, [code, spell, setLocalSpell]);\n\n\tconst parseSpell = useCallback((incantation: string) => {\n\t\ttry {\n\t\t\tconst newSpell = compileSpell(incantation);\n\t\t\tsetLocalSpell(newSpell);\n\t\t\tsetError(undefined);\n\t\t} catch (error) {\n\t\t\tsetLocalSpell(undefined);\n\t\t\tsetError(error);\n\t\t}\n\t}, []);\n\n\treturn (\n\t<div className=\"flex-column flex-expand no-scroll\">\n\t\t<h4>Spells</h4>\n\t\t<div className=\"error-bar text-small flex-row flex-middle\">{error && String(error)}&nbsp;</div>\n\t\t<button disabled={error} onClick={() => {\n\t\t\tif (localSpell) {\n\t\t\t\tonSpellChange(localSpell);\n\t\t\t}\n\t\t}}>Update</button>\n\t\t<SpellEditor\n\t\t\tsource={code}\n\t\t\tonChange={parseSpell}\n\t\t\tonFocus={onFocus}\n\t\t\tonBlur={onBlur}\n\t\t/>\n\t\t<div className=\"flex-row flex-expand no-scroll\">\n\t\t\t<div className=\"flex-expand scroll\">\n\t\t\t\t{input ? <DebugInputTable input={input} /> : null}\n\t\t\t</div>\n\t\t\t<div className=\"flex-expand\">\n\t\t\t\t{targets.length <= 0 && 'Nothing under mouse'}\n\t\t\t\t{targets.map((target, idx) => (\n\t\t\t\t\t<DebugTarget target={target.object} key={idx} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t);\n};\n\nexport default CodeWindow;\n","import fp from 'lodash/fp';\nimport { Vector3 } from 'three';\nimport { ContextApi, makeBox, MakeEntityProps } from './api';\nimport { Colors, Tag, SCALE } from './config';\nimport { Tick, TimeStep } from './gameContext';\n\nconst randomPointNear = (\n\torigin: Vector3,\n\tradius: number,\n\tinnerRadius: number = 0\n): Vector3 => origin.clone()\n.add(\n\tnew Vector3().setFromSphericalCoords(\n\t\tMath.random() * (radius - innerRadius) + innerRadius,\n\t\tMath.random() * Math.PI * 2, Math.PI/2\n\t)\n\t.setZ(0)\n);\n\nfunction addAllMut<T>(self: Set<T>, from: Iterable<T>): Set<T> {\n\tfor (const elt of from) {\n\t\tself.add(elt);\n\t}\n\treturn self;\n}\n\nconst chasePlayer: () => Tick = () => (ctx, { delta }, { mesh }) => {\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.01;\n\n\t// Walk toward cube\n\tconst speed = 0.05;\n\tif (ctx.bb.player && mesh.position.distanceTo(ctx.bb.player.mesh.position) > speed) {\n\t\tconst v = ctx.bb.player.mesh.position.clone()\n\t\t\t.sub(mesh.position)\n\t\t\t.normalize()\n\t\t\t.multiplyScalar(speed * SCALE * delta);\n\t\t\tmesh.position.add(v);\n\t}\n};\n\nexport const makeOther = (\n\tapi: ContextApi,\n\tentityProps: Partial<MakeEntityProps> = {},\n) => {\n\t// Make the other near the player\n\tconst origin = fp.has(['x', 'y'], entityProps)\n\t\t? fp.pick(['x', 'y'], entityProps)\n\t\t: randomPointNear(api.ctx.bb.player?.mesh?.position ?? new Vector3(), 10, 2);\n\n\tconst {\n\t\ttags = new Set(),\n\t\ttick = chasePlayer(),\n\t\t...pass\n\t} = entityProps;\n\tapi.makeEntity({\n\t\ttags: addAllMut(new Set([Tag.Other]), tags),\n\n\t\tx: origin.x,\n\t\ty: origin.y,\n\t\tmesh: makeBox(Colors.Red),\n\t\tname: 'some-enemy',\n\t\ttick,\n\n\t\t// And override\n\t\t...pass,\n\t});\n};\n\n\nconst wander: () => Tick = () => {\n\tconst speed = 0.02;\n\tlet nextPoint: Vector3 | undefined;\n\tconst heading = new Vector3(1.0, 0.0, 0.0);\n\treturn (ctx, { delta }, { mesh }) => {\n\t\tif (!nextPoint || nextPoint.distanceTo(mesh.position) <= speed) {\n\t\t\tnextPoint = randomPointNear(mesh.position, 3, 1);\n\t\t}\n\n\t\theading.copy(nextPoint)\n\t\t\t.setZ(0)\n\t\t\t.sub(mesh.position)\n\t\t\t.normalize()\n\t\t\t.setZ(0);\n\t\tmesh.lookAt(nextPoint);\n\t\tmesh.position.add(heading.multiplyScalar(speed * SCALE * delta));\n\t};\n};\n\n\ntype SpawnerProps = {\n\tapi: ContextApi,\n\tmaxPop?: number,\n};\n// Make a spawner den (?)\nexport const spawner = ({\n\tapi,\n\tmaxPop = 10,\n\tspawnTime = 1500,\n}: SpawnerProps & Record<string, any>) => {\n\tconsole.log('Make Spawner', { api, maxPop });\n\tconst den = api.makeEntity({\n\n\t});\n\tlet lastSpawn = 0;\n\tconst spawnTags = new Set(['spawner', den.mesh.uuid]);\n\treturn (api: ContextApi, time: TimeStep) => {\n\t\tconst pop = api.getByTags(spawnTags);\n\t\tif (time.time - lastSpawn >= spawnTime && pop.length < maxPop) {\n\t\t\tconst { x, y } = randomPointNear(den.mesh.position, 15, 3);\n\t\t\tmakeOther(api, {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\ttags: spawnTags,\n\t\t\t\ttick: wander(),\n\t\t\t});\n\t\t\tlastSpawn = time.time;\n\t\t}\n\t};\n};\n","import React, { createRef } from 'react';\nimport type { RefObject } from 'react';\nimport {\n\tMesh, ShaderMaterial, PlaneGeometry,\n\tScene, PerspectiveCamera, WebGLRenderer,\n\tVector3,\n\tMeshBasicMaterial,\n} from 'three';\nimport fp from 'lodash/fp';\n\nimport { Controls, PLANE_Z, SCALE, Tag } from './config';\nimport { makeContext, TimeStep } from './gameContext';\nimport { ContextApi, withContext } from './api';\nimport CodeWindow from './CodeWindow';\nimport * as ai from './ai';\n\nimport vertShader from './shaders/test-vert';\nimport { Spell, spellBook, spellCaster } from './magic';\nimport fragShader from './shaders/test-frag';\nimport { axisPastDeadzone } from './inputs/globalContext';\n\n\nconst otherSpawner = () => {\n\tlet lastSpawn = Date.now();\n\treturn (api: ContextApi) => {\n\t\tconst { keys } = api.ctx.bb.input.globalInputs;\n\t\tif (keys[Controls.Spawn]?.down && Date.now() - lastSpawn >= 250) {\n\t\t\tlastSpawn = Date.now();\n\t\t\tai.makeOther(api);\n\t\t}\n\t};\n};\n\nconst twinstickCamera = () => (api: ContextApi) => {\n\tif (api.ctx.bb.player?.mesh.position) {\n\t\tconst target = api.ctx.bb.player.mesh.position.clone()\n\t\t\t.setZ(api.ctx.camera.position.z);\n\t\tif (api.ctx.camera.position.distanceTo(target) < 0.1) {\n\t\t\tapi.ctx.camera.position.copy(target);\n\t\t} else {\n\t\t\tapi.ctx.camera.position.lerp(target, 0.1);\n\t\t}\n\t}\n};\n\nconst setUpScene = (api: ContextApi) => {\n\t// Player stuff\n\tconst cube = api.makeEntity({\n\t\tx: 1,\n\t\ty: 1,\n\t\tname: 'cube',\n\t\ttick(ctx, { delta }, { mesh }) {\n\t\t\tmesh.rotation.x += 0.01;\n\t\t\tmesh.rotation.y += 0.01;\n\n\t\t\t// Move around\n\t\t\tconst { globalInputs } = ctx.bb.input;\n\t\t\tconst v = new Vector3();\n\n\t\t\t// In units / millie\n\t\t\tconst speed = 0.12 * (globalInputs.keys[Controls.Boost]?.down ? 2 : 1);\n\t\t\tif (globalInputs.keys[Controls.Up]?.down) {\n\t\t\t\tv.y++;\n\t\t\t}\n\t\t\tif (globalInputs.keys[Controls.Down]?.down) {\n\t\t\t\tv.y--;\n\t\t\t}\n\t\t\tif (globalInputs.keys[Controls.Left]?.down) {\n\t\t\t\tv.x--;\n\t\t\t}\n\t\t\tif (globalInputs.keys[Controls.Right]?.down) {\n\t\t\t\tv.x++;\n\t\t\t}\n\n\t\t\t// Move around _with sticks_\n\t\t\tif (globalInputs.gamepads?.[0]?.axes) {\n\t\t\t\tconst [moveX, moveY] = globalInputs.gamepads?.[0]?.axes;\n\t\t\t\tif (axisPastDeadzone(moveX, + moveY)) {\n\t\t\t\t\tv.x = moveX;\n\t\t\t\t\tv.y = -moveY;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmesh.position.add(v\n\t\t\t\t.normalize()\n\t\t\t\t.multiplyScalar(speed * SCALE * delta)\n\t\t\t);\n\t\t}\n\t});\n\n\t// Toss another in tere\n\tai.makeOther(api);\n\n\t// Blackboard for logic comms\n\tapi.ctx.bb.player = cube;\n\n\t// Background\n\tconst ground = new Mesh(\n\t\tnew PlaneGeometry(10000, 10000),\n\t\tnew ShaderMaterial({\n\t\t\tuniforms: {},\n\t\t\tvertexShader: vertShader,\n\t\t\tfragmentShader: fragShader,\n\t\t}),\n\t);\n\tground.position.z = -2;\n\tground.name = 'ground';\n\tapi.ctx.scene.add(ground);\n\n\t// Mouse targeting plane\n\tconst targeting = new Mesh(\n\t\tnew PlaneGeometry(1000000, 1000000),\n\t\tnew MeshBasicMaterial({\n\t\t\topacity: 0,\n\t\t\ttransparent: true,\n\t\t}),\n\t);\n\ttargeting.name = 'targeting';\n\tapi.ctx.scene.add(targeting);\n\n\treturn api;\n};\n\nexport interface Props {}\n\nexport interface State {\n\tapi: ContextApi;\n\tpaused: boolean;\n\n\t// [SPELLS] @todo: clean up spell ideas\n\tspellSaved: number;\n\tcurrentSpell?: Spell;\n\tcurrentSpellTicker?: AppTick;\n}\n\ntype AppTick = (api: ContextApi, step: TimeStep) => void;\nclass Game extends React.Component<Props, State> {\n\tcontainerRef: RefObject<HTMLDivElement>;\n\tapi: ContextApi;\n\ttickables: AppTick[] = [];\n\n\t_time: number = 0;\n\t_frameId: number = 0;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Init in constructor\n\t\tconst width = 480;\n\t\tconst height = 480;\n\t\tconst ctx = makeContext({\n\t\t\tscene: new Scene(),\n\t\t\tcamera: new PerspectiveCamera(35, width / height, 0.1, 1000),\n\t\t\trenderer: new WebGLRenderer(),\n\t\t});\n\t\tthis.containerRef = createRef<HTMLDivElement>();\n\t\tctx.renderer.setSize(width, height);\n\t\tctx.camera.position.z = PLANE_Z;\n\t\tthis.api = withContext(ctx);\n\n\t\tthis.state = {\n\t\t\tapi: this.api,\n\t\t\tpaused: true,\n\n\t\t\tspellSaved: 0,\n\t\t\tcurrentSpell: undefined,\n\t\t\tcurrentSpellTicker: undefined,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// ---- Mount Init ----- //\n\t\tthis.containerRef.current?.appendChild(this.api.ctx.renderer.domElement);\n\n\t\tsetUpScene(this.api);\n\n\t\tthis.tickables.push(otherSpawner());\n\t\tthis.tickables.push(ai.spawner({ api: this.api }));\n\t\tthis.tickables.push(twinstickCamera());\n\n\t\tthis.setSpell(spellBook[0]);\n\n\t\t// Run\n\t\tthis.play();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.pause();\n\t}\n\n\tplay() {\n\t\tif (this.state.paused) {\n\t\t\tthis._time = performance.now();\n\t\t\tthis._frameId = window.requestAnimationFrame((t) => this.tick(t));\n\t\t\tthis.setState({ paused: false });\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (!this.state.paused) {\n\t\t\twindow.cancelAnimationFrame(this._frameId);\n\t\t\tthis._frameId = -1;\n\t\t\tthis.setState({ paused: true });\n\t\t}\n\t}\n\n\ttick(atTime: number) {\n\t\tif (!this.state.paused) {\n\t\t\tthis._frameId = window.requestAnimationFrame((t) => this.tick(t));\n\t\t\tconst timeStep: TimeStep = {\n\t\t\t\ttime: atTime,\n\t\t\t\tdelta: atTime - this._time,\n\t\t\t};\n\t\t\tthis._time = atTime;\n\n\t\t\t// Transform mouse into game space\n\t\t\tif (this.api.ctx.bb.input.globalInputs.pointers[1]) {\n\t\t\t\tconst { x, y, width, height } = this.api.ctx.renderer.domElement.getBoundingClientRect();\n\t\t\t\tconst { x: clientX, y: clientY } = this.api.ctx.bb.input.globalInputs.pointers[1];\n\t\t\t\tthis.api.ctx.bb.input.mouse.x = ((clientX - width / 2) - x) / width * 2;\n\t\t\t\tthis.api.ctx.bb.input.mouse.y = - ((clientY - height / 2) - y) / height * 2;\n\t\t\t}\n\n\t\t\t// Get objects under mouse\n\t\t\tthis.api.raycaster.setFromCamera(\n\t\t\t\tthis.api.ctx.bb.input.mouse,\n\t\t\t\tthis.api.ctx.camera\n\t\t\t);\n\t\t\tthis.api.ctx.targets = this.api.raycaster.intersectObjects(this.api.ctx.scene.children);\n\t\t\tthis.api.ctx.targeting = this.api.ctx.targets.find(x => x.object.name === 'targeting');\n\n\t\t\t// Tick the world\n\t\t\tthis.tickables.forEach(tick => tick(this.api, timeStep));\n\t\t\tthis.api.ctx.actors.forEach(actor => actor.tick(this.api.ctx, timeStep, actor));\n\t\t\tthis.api.ctx.renderer.render(this.api.ctx.scene, this.api.ctx.camera);\n\n\t\t\t// Render react\n\t\t\tthis.setState({ api: this.api });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"flex-expand\">\n\t\t\t\t<div className=\"fill flex-row padded\">\n\t\t\t\t\t<div className=\"flex-column flex-expand\">\n\t\t\t\t\t\t<div ref={this.containerRef}>\n\t\t\t\t\t\t\t{this.state.paused && (\n\t\t\t\t\t\t\t\t<div className=\"fill pause-overlay\">\n\t\t\t\t\t\t\t\t\t<h3>Paused</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<div className=\"fill spell-saved-overlay\" style={{\n\t\t\t\t\t\t\t\topacity: Boolean(this.state.spellSaved) ? 1 : 0,\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h3>Spell Saved</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t\t\t<button disabled={!this.api.ctx.bb.player} onClick={(evt) => {\n\t\t\t\t\t\t\t\tevt.currentTarget.blur();\n\t\t\t\t\t\t\t\tif (this.api.ctx.bb.player) {\n\t\t\t\t\t\t\t\t\tthis.api.ctx.camera.position.setX(\n\t\t\t\t\t\t\t\t\t\tthis.api.ctx.bb.player.mesh.position.x\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.api.ctx.camera.position.setY(\n\t\t\t\t\t\t\t\t\t\tthis.api.ctx.bb.player.mesh.position.y\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>Center Player</button>\n\n\t\t\t\t\t\t\t<button onClick={(evt) => {\n\t\t\t\t\t\t\t\tevt.currentTarget.blur();\n\t\t\t\t\t\t\t\tthis.api.removeByTags([Tag.Other]);\n\t\t\t\t\t\t\t}}>Clear Other</button>\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={this.state.paused ? 'pause-btn--paused' : 'pause-btn--playing'}\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\tevt.currentTarget.blur();\n\t\t\t\t\t\t\t\tif (this.state.paused) {\n\t\t\t\t\t\t\t\t\tthis.play();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>{this.state.paused ? 'Resume' : 'Pause'}</button>\n\n\t\t\t\t\t\t\t<button onClick={() => this.setSpell(fp.sample(spellBook) ?? spellBook[0])}>Random Spell</button>\n\t\t\t\t\t\t\t<select value={-1} onChange={evt => {\n\t\t\t\t\t\t\t\tevt.currentTarget.blur();\n\t\t\t\t\t\t\t\tconst spell = spellBook[evt.target.value];\n\t\t\t\t\t\t\t\tif (spell) {\n\t\t\t\t\t\t\t\t\tthis.setSpell(spell);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<option value={-1}>Spellbook</option>\n\t\t\t\t\t\t\t\t{spellBook.map((_, i) => (\n\t\t\t\t\t\t\t\t\t<option value={i} key={i}>Spell {i}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CodeWindow\n\t\t\t\t\t\tinput={this.api.ctx.bb.input}\n\t\t\t\t\t\ttargets={this.api.ctx.targets}\n\t\t\t\t\t\tspell={this.state.currentSpell}\n\t\t\t\t\t\tonFocus={() => {\n\t\t\t\t\t\t\tif (!this.state.paused) {\n\t\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonSpellChange={(spell: Spell) => {\n\t\t\t\t\t\t\tthis.setSpell(spell);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n\t// -------------\n\t// Pull out logic / hacks I guess\n\t// -------------\n\tsetSpell(spell: Spell) {\n\t\t// [SPELLS] @todo: clean up spell ideas\n\t\tif (this.state.currentSpellTicker) {\n\t\t\tthis.tickables = this.tickables.filter(x => x !== this.state.currentSpellTicker);\n\t\t}\n\n\t\tconst currentSpellTicker = spellCaster(spell);\n\t\tthis.tickables.push(currentSpellTicker);\n\n\t\tif (this.state.spellSaved) {\n\t\t\tclearTimeout(this.state.spellSaved);\n\t\t}\n\t\tconst saveTimeout = +setTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\tspellSaved: 0,\n\t\t\t});\n\t\t}, 2000);\n\n\t\tthis.setState({\n\t\t\tspellSaved: saveTimeout,\n\t\t\tcurrentSpell: spell,\n\t\t\tcurrentSpellTicker,\n\t\t});\n\n\t}\n}\n\nexport default Game;\n","const source = `varying vec2 vUv;\n\nvoid main()\n{\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n}`;\n\nexport default source;\n","const source = `varying vec2 vUv;\n\n// rg gradient\nvec4 simple_gradient(vec2 position, vec2 gridcell) {\n\treturn vec4(\n\t\tposition.yx * 100.0,\n\t\t1.0,\n\t\t1.0\n\t);\n}\n\n\nvec4 ground(vec2 position, vec2 gridcell) {\n\treturn vec4(gridcell.xy, 1.0, 1.0);\n}\n\n\n// Simple grid overlay combine\nvoid main( void ) {\n\tvec2 position = - 1.0 + 2.0 * vUv;\n\tvec2 gridcell = mod(floor(position.xy * 100000.0), 80.0) / 80.0;\n\tvec4 color = simple_gradient(position, gridcell);\n\n\tif (gridcell.x == 0.0 || gridcell.y == 0.0) {\n\t\tgl_FragColor = -color;\n\t} else {\n\t\tgl_FragColor = color;\n\t}\n}`;\n\nexport default source;\n","import React, { useState } from 'react';\nimport { useLifecycles } from 'react-use';\nimport './App.css';\nimport DebugInput from './DebugInput';\nimport Game from './game/Game';\nimport { HookInputs, UnhookInputs } from './game/inputs/globalContext';\n\nconst Header = () => (\n\t<div>\n\t\t<h4>Program RPG</h4>\n\t\t<p>\n\t\t\tA little playground of an idea.\n\t\t\tSpells and weapons are backed by scripts.\n\t\t\tYou can modify these scripts at the cost of MP per compute.\n\t\t</p>\n\t\t<p>\n\t\t\tSee <a href=\"https://threejs.org/docs/index.html#api/en/math/Vector3\">three.js / Vector3</a> for docs on spell's position/velocity types.\n\t\t</p>\n\t</div>\n);\n\n\nfunction App() {\n\tconst [showDebug, setShowDebug] = useState(false);\n\tuseLifecycles(HookInputs, UnhookInputs);\n\treturn (\n\t\t<div className=\"flex-column padded fill\">\n\t\t\t<Header />\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowDebug(!showDebug)}>Toggle Input Debug</button>\n\t\t\t</div>\n\t\t\t{showDebug && (<DebugInput />)}\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}